Submissions must include a writeup of the challenge of at least 100 words describing your process, decisions, and collaborations.

CHALLENGE #1 (Roman Numerals):
This challenge involved finding the most optimized way of converting Roman numerals to a numeric value. I postulated that using key:value pairs to hold what is essentially a conversion table would be an efficient way to store and access the values. This process involved importing the <map> library. When a number was given, a loop would go from left to right adding all the numbers. In the case that the numerals do not follow the conventional addition rules (like with IV or IX), the code is designed to detect when such a pair is present and add the proper number accordingly and also skip the next iteration of the loop (with i++). To maximize optimization, I created a special condition that detects when the input is just a single Roman numeral; it converts it instantaneously and returns the program without having to enter any loop whatsoever. I had the opportunity to fine tune and further refine my program by talking through the processes with my group members, which was indispensable to the process.

CHALLENGE #2 (Math Proofs):
For this project, we tackled the problem by first understanding what the problem was asking for which was k=p+2(n)^2. 
We broke down this problem by breaking down this equation first we must understand K is a number given by the user this was a key concept that allowed the program to work efficiently, this is because we would make a program that doesn't check all possible numbers infinitely.
This K is a limit that allows for P (prime) to have to be <= K  allowing for efficiency! We also interpreted n^2 as just a perfect square helping with interpretation and more than anything IMPLEMENTATION!
This was all thanks to Vectors which was the building block for this project. As seen on! 

CHALLENGE #3 (Caveman):
What this program does is it converts the English sentences into caveman speech by letting the user choose which prompt they like. It does this by entering a sentence and then making the next sentence sound like what a caveman would say. It gets rid of bigger, 
more complex words and makes them shorter and more concise. First, we looked at the sentences that were provided to us and analyzed the largest words. We then took those out if they were adjectives. Then, we
saw what words could be changed to be simpler, like making "hot fudge" into "cocoa", since cocoa existed during the paleolithic period but hot fudge did not. Finally, we would keep the rest of the words, and shorten them only if necessary. One example we did was making "Marcus Halberstam" into just "Marcus", since the concept of a last name does not seem relevant to a caveman. We then coded the original sentences and their translations,
showing the user the before and after of each. 

CHALLENGE #4 (GPS):
After completing challenge #1 and #3, and with the group members specializing in math proofs working on #2, Zoe and I decided we would do our best at applying ourselves toward the extra challenge. Bearing in mind the requirements, I was able to derive the distances of all the buildings from one another using the Google Maps measure distance tool, drawing on the shortest walkable paths, and storing the values. Additional, to determine the z values, I measured the elevation level of all the floor levels and top levels of the 8 relevant buildings. Based on the prompt and instructions, it was difficult to determine how to carry out the development of the code. I could not quite figure out why x, y, and z values were needed when I was able to collect the distance values by other means. Furthermore, the "schedule" that the student was given, ie, the order in which the student had to visit the buildings was not specified which was a little misleading with the context of the challenge. I had not realized that I was supposed to find the order of the buildings that would have made the shortest total path. After some research, I realized that this type of problem is called the "travelling salesman problem," and that without more time and study I would not be able to fully grasp this problem's intricacies and develop a satisfactory solution. It is beyond my skill set at this time. I worked with my teammate, Zoe, who helped structure our approach and iron out the logic for a potential solution. I believe we had collected all the data necessary, I was simply not able to utilize it effectively towards the proper solution given the archetype of the problem.

